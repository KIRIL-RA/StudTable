"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/checklogin";
exports.ids = ["pages/api/checklogin"];
exports.modules = {

/***/ "cookies-next":
/*!*******************************!*\
  !*** external "cookies-next" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("cookies-next");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "(api)/./classes/Exceptions/CommonExceptions.js":
/*!************************************************!*\
  !*** ./classes/Exceptions/CommonExceptions.js ***!
  \************************************************/
/***/ ((module) => {

eval("\nclass NotAllParametersWereRecievedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"NotAllParametersWereRecieved\";\n    }\n}\nclass IncorrectDataException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"IncorrectData\";\n    }\n}\nmodule.exports = {\n    NotAllParametersWereRecievedError,\n    IncorrectDataException\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jbGFzc2VzL0V4Y2VwdGlvbnMvQ29tbW9uRXhjZXB0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUFBLE1BQU1BLGlDQUFpQyxTQUFTQyxLQUFLO0lBQ2pEQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLDhCQUE4QixDQUFDO0tBQzlDO0NBQ0o7QUFFRCxNQUFNQyxzQkFBc0IsU0FBU0osS0FBSztJQUN0Q0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxlQUFlLENBQUM7S0FDL0I7Q0FDSjtBQUdERSxNQUFNLENBQUNDLE9BQU8sR0FBRztJQUFDUCxpQ0FBaUM7SUFBRUssc0JBQXNCO0NBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWR0YWJsZS8uL2NsYXNzZXMvRXhjZXB0aW9ucy9Db21tb25FeGNlcHRpb25zLmpzPzZiNWEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTm90QWxsUGFyYW1ldGVyc1dlcmVSZWNpZXZlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiTm90QWxsUGFyYW1ldGVyc1dlcmVSZWNpZXZlZFwiO1xuICAgIH1cbn1cblxuY2xhc3MgSW5jb3JyZWN0RGF0YUV4Y2VwdGlvbiBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkluY29ycmVjdERhdGFcIjtcbiAgICB9XG59XG5cblxubW9kdWxlLmV4cG9ydHMgPSB7Tm90QWxsUGFyYW1ldGVyc1dlcmVSZWNpZXZlZEVycm9yLCBJbmNvcnJlY3REYXRhRXhjZXB0aW9ufTsiXSwibmFtZXMiOlsiTm90QWxsUGFyYW1ldGVyc1dlcmVSZWNpZXZlZEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIiwiSW5jb3JyZWN0RGF0YUV4Y2VwdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./classes/Exceptions/CommonExceptions.js\n");

/***/ }),

/***/ "(api)/./classes/Exceptions/DatabaseExceptions.js":
/*!**************************************************!*\
  !*** ./classes/Exceptions/DatabaseExceptions.js ***!
  \**************************************************/
/***/ ((module) => {

eval("\nclass DataNotFoundException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"DataNotFound\";\n    }\n}\nmodule.exports = {\n    DataNotFoundException\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jbGFzc2VzL0V4Y2VwdGlvbnMvRGF0YWJhc2VFeGNlcHRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBTUEscUJBQXFCLFNBQVNDLEtBQUs7SUFDckNDLFlBQVlDLE9BQU8sQ0FBQztRQUNoQixLQUFLLENBQUNBLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQUcsY0FBYyxDQUFDO0tBQzlCO0NBQ0o7QUFFREMsTUFBTSxDQUFDQyxPQUFPLEdBQUc7SUFBQ04scUJBQXFCO0NBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0dWR0YWJsZS8uL2NsYXNzZXMvRXhjZXB0aW9ucy9EYXRhYmFzZUV4Y2VwdGlvbnMuanM/YjZmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBEYXRhTm90Rm91bmRFeGNlcHRpb24gZXh0ZW5kcyBFcnJvcntcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiRGF0YU5vdEZvdW5kXCI7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtEYXRhTm90Rm91bmRFeGNlcHRpb259OyJdLCJuYW1lcyI6WyJEYXRhTm90Rm91bmRFeGNlcHRpb24iLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm5hbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./classes/Exceptions/DatabaseExceptions.js\n");

/***/ }),

/***/ "(api)/./classes/Exceptions/FarmExceptions.js":
/*!**********************************************!*\
  !*** ./classes/Exceptions/FarmExceptions.js ***!
  \**********************************************/
/***/ ((module) => {

eval("\nclass FarmNotFoundException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"FarmNotFound\";\n    }\n}\nclass FarmGetAccessException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"AccessDataNotValid\";\n    }\n}\nclass GetTasksException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"GetTasksError\";\n    }\n}\nclass TasksNotFondException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"TasksNotFond\";\n    }\n}\nclass GetWorkersExceptin extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"ErrorGetWorkers\";\n    }\n}\nclass WorkerNotOwnedToFarmException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"WorkerNotOwnedToFarm\";\n    }\n}\nclass AddTaskException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"AddTaskError\";\n    }\n}\nclass CultureNotOwnedToUserException extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"CultureNotOwnedToUserError\";\n    }\n}\nmodule.exports = {\n    FarmNotFoundException,\n    FarmGetAccessException,\n    GetTasksException,\n    TasksNotFondException,\n    GetWorkersExceptin,\n    WorkerNotOwnedToFarmException,\n    AddTaskException,\n    CultureNotOwnedToUserException\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jbGFzc2VzL0V4Y2VwdGlvbnMvRmFybUV4Y2VwdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFNQSxxQkFBcUIsU0FBU0MsS0FBSztJQUNyQ0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxjQUFjLENBQUM7S0FDOUI7Q0FDSjtBQUVELE1BQU1DLHNCQUFzQixTQUFTSixLQUFLO0lBQ3RDQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLG9CQUFvQixDQUFDO0tBQ3BDO0NBQ0o7QUFFRCxNQUFNRSxpQkFBaUIsU0FBU0wsS0FBSztJQUNqQ0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxlQUFlLENBQUM7S0FDL0I7Q0FDSjtBQUVELE1BQU1HLHFCQUFxQixTQUFTTixLQUFLO0lBQ3JDQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLGNBQWMsQ0FBQztLQUM5QjtDQUNKO0FBRUQsTUFBTUksa0JBQWtCLFNBQVNQLEtBQUs7SUFDbENDLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixLQUFLLENBQUNBLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQUcsaUJBQWlCLENBQUM7S0FDakM7Q0FDSjtBQUVELE1BQU1LLDZCQUE2QixTQUFTUixLQUFLO0lBQzdDQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLHNCQUFzQixDQUFDO0tBQ3RDO0NBQ0o7QUFFRCxNQUFNTSxnQkFBZ0IsU0FBU1QsS0FBSztJQUNoQ0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxjQUFjLENBQUM7S0FDOUI7Q0FDSjtBQUVELE1BQU1PLDhCQUE4QixTQUFTVixLQUFLO0lBQzlDQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLDRCQUE0QixDQUFDO0tBQzVDO0NBQ0o7QUFFRFEsTUFBTSxDQUFDQyxPQUFPLEdBQUc7SUFBQ2IscUJBQXFCO0lBQUVLLHNCQUFzQjtJQUFFQyxpQkFBaUI7SUFBRUMscUJBQXFCO0lBQUVDLGtCQUFrQjtJQUFFQyw2QkFBNkI7SUFBRUMsZ0JBQWdCO0lBQUVDLDhCQUE4QjtDQUFHLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkdGFibGUvLi9jbGFzc2VzL0V4Y2VwdGlvbnMvRmFybUV4Y2VwdGlvbnMuanM/ZDRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBGYXJtTm90Rm91bmRFeGNlcHRpb24gZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJGYXJtTm90Rm91bmRcIjtcbiAgICB9XG59XG5cbmNsYXNzIEZhcm1HZXRBY2Nlc3NFeGNlcHRpb24gZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJBY2Nlc3NEYXRhTm90VmFsaWRcIjtcbiAgICB9XG59XG5cbmNsYXNzIEdldFRhc2tzRXhjZXB0aW9uIGV4dGVuZHMgRXJyb3J7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJHZXRUYXNrc0Vycm9yXCI7XG4gICAgfVxufVxuXG5jbGFzcyBUYXNrc05vdEZvbmRFeGNlcHRpb24gZXh0ZW5kcyBFcnJvcntcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlRhc2tzTm90Rm9uZFwiO1xuICAgIH1cbn1cblxuY2xhc3MgR2V0V29ya2Vyc0V4Y2VwdGluIGV4dGVuZHMgRXJyb3J7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJFcnJvckdldFdvcmtlcnNcIjtcbiAgICB9XG59XG5cbmNsYXNzIFdvcmtlck5vdE93bmVkVG9GYXJtRXhjZXB0aW9uIGV4dGVuZHMgRXJyb3J7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJXb3JrZXJOb3RPd25lZFRvRmFybVwiO1xuICAgIH1cbn1cblxuY2xhc3MgQWRkVGFza0V4Y2VwdGlvbiBleHRlbmRzIEVycm9ye1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiQWRkVGFza0Vycm9yXCI7XG4gICAgfVxufVxuXG5jbGFzcyBDdWx0dXJlTm90T3duZWRUb1VzZXJFeGNlcHRpb24gZXh0ZW5kcyBFcnJvcntcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIkN1bHR1cmVOb3RPd25lZFRvVXNlckVycm9yXCI7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtGYXJtTm90Rm91bmRFeGNlcHRpb24sIEZhcm1HZXRBY2Nlc3NFeGNlcHRpb24sIEdldFRhc2tzRXhjZXB0aW9uLCBUYXNrc05vdEZvbmRFeGNlcHRpb24sIEdldFdvcmtlcnNFeGNlcHRpbiwgV29ya2VyTm90T3duZWRUb0Zhcm1FeGNlcHRpb24sIEFkZFRhc2tFeGNlcHRpb24sIEN1bHR1cmVOb3RPd25lZFRvVXNlckV4Y2VwdGlvbiAgfTsiXSwibmFtZXMiOlsiRmFybU5vdEZvdW5kRXhjZXB0aW9uIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIiwiRmFybUdldEFjY2Vzc0V4Y2VwdGlvbiIsIkdldFRhc2tzRXhjZXB0aW9uIiwiVGFza3NOb3RGb25kRXhjZXB0aW9uIiwiR2V0V29ya2Vyc0V4Y2VwdGluIiwiV29ya2VyTm90T3duZWRUb0Zhcm1FeGNlcHRpb24iLCJBZGRUYXNrRXhjZXB0aW9uIiwiQ3VsdHVyZU5vdE93bmVkVG9Vc2VyRXhjZXB0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./classes/Exceptions/FarmExceptions.js\n");

/***/ }),

/***/ "(api)/./classes/Exceptions/UserExceptions.js":
/*!**********************************************!*\
  !*** ./classes/Exceptions/UserExceptions.js ***!
  \**********************************************/
/***/ ((module) => {

eval("\nclass UserNotFoundError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserNotFound\";\n    }\n}\nclass UserLoginDataIncorrectError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserLoginDataIncorrect\";\n    }\n}\nclass UserNotLoginedError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserNotLogined\";\n    }\n}\nclass UserHasNoPermission extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserHasNoPermission\";\n    }\n}\n;\nclass UserAreadyConfirmed extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserAlreadyConfirmed\";\n    }\n}\n;\nclass UserNameAlreadyExist extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"UserNameAlreadyExists\";\n    }\n}\nmodule.exports = {\n    UserNotFoundError,\n    UserLoginDataIncorrectError,\n    UserNotLoginedError,\n    UserHasNoPermission,\n    UserAreadyConfirmed,\n    UserNameAlreadyExist\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jbGFzc2VzL0V4Y2VwdGlvbnMvVXNlckV4Y2VwdGlvbnMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUU7QUFBQSxNQUFNQSxpQkFBaUIsU0FBU0MsS0FBSztJQUNuQ0MsWUFBWUMsT0FBTyxDQUFDO1FBQ2hCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxjQUFjLENBQUM7S0FDOUI7Q0FDRjtBQUVILE1BQU1DLDJCQUEyQixTQUFTSixLQUFLO0lBQzNDQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLHdCQUF3QixDQUFDO0tBQ3hDO0NBQ0o7QUFFRCxNQUFNRSxtQkFBbUIsU0FBU0wsS0FBSztJQUNuQ0MsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxnQkFBZ0IsQ0FBQztLQUNoQztDQUNKO0FBRUQsTUFBTUcsbUJBQW1CLFNBQVNOLEtBQUs7SUFDbkNDLFlBQVlDLE9BQU8sQ0FBQztRQUNoQixLQUFLLENBQUNBLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQUcscUJBQXFCLENBQUM7S0FDckM7Q0FDSjs7QUFFRCxNQUFNSSxtQkFBbUIsU0FBU1AsS0FBSztJQUNuQ0MsWUFBWUMsT0FBTyxDQUFDO1FBQ2hCLEtBQUssQ0FBQ0EsT0FBTyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUNDLElBQUksR0FBRyxzQkFBc0IsQ0FBQztLQUN0QztDQUNKOztBQUVELE1BQU1LLG9CQUFvQixTQUFTUixLQUFLO0lBQ3BDQyxZQUFZQyxPQUFPLENBQUM7UUFDaEIsS0FBSyxDQUFDQSxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQ0MsSUFBSSxHQUFHLHVCQUF1QixDQUFDO0tBQ3ZDO0NBQ0o7QUFFRE0sTUFBTSxDQUFDQyxPQUFPLEdBQUc7SUFBQ1gsaUJBQWlCO0lBQUVLLDJCQUEyQjtJQUFFQyxtQkFBbUI7SUFBRUMsbUJBQW1CO0lBQUVDLG1CQUFtQjtJQUFFQyxvQkFBb0I7Q0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3R1ZHRhYmxlLy4vY2xhc3Nlcy9FeGNlcHRpb25zL1VzZXJFeGNlcHRpb25zLmpzPzRjZWEiXSwic291cmNlc0NvbnRlbnQiOlsiICBjbGFzcyBVc2VyTm90Rm91bmRFcnJvciBleHRlbmRzIEVycm9ye1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2Upe1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJVc2VyTm90Rm91bmRcIjtcbiAgICB9XG4gIH1cblxuY2xhc3MgVXNlckxvZ2luRGF0YUluY29ycmVjdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiVXNlckxvZ2luRGF0YUluY29ycmVjdFwiO1xuICAgIH1cbn1cblxuY2xhc3MgVXNlck5vdExvZ2luZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlVzZXJOb3RMb2dpbmVkXCI7XG4gICAgfVxufVxuXG5jbGFzcyBVc2VySGFzTm9QZXJtaXNzaW9uIGV4dGVuZHMgRXJyb3J7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSl7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlVzZXJIYXNOb1Blcm1pc3Npb25cIjtcbiAgICB9XG59O1xuXG5jbGFzcyBVc2VyQXJlYWR5Q29uZmlybWVkIGV4dGVuZHMgRXJyb3J7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSl7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSBcIlVzZXJBbHJlYWR5Q29uZmlybWVkXCI7XG4gICAgfVxufTtcblxuY2xhc3MgVXNlck5hbWVBbHJlYWR5RXhpc3QgZXh0ZW5kcyBFcnJvcntcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKXtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiVXNlck5hbWVBbHJlYWR5RXhpc3RzXCI7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtVc2VyTm90Rm91bmRFcnJvciwgVXNlckxvZ2luRGF0YUluY29ycmVjdEVycm9yLCBVc2VyTm90TG9naW5lZEVycm9yLCBVc2VySGFzTm9QZXJtaXNzaW9uLCBVc2VyQXJlYWR5Q29uZmlybWVkLCBVc2VyTmFtZUFscmVhZHlFeGlzdH07Il0sIm5hbWVzIjpbIlVzZXJOb3RGb3VuZEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIiwiVXNlckxvZ2luRGF0YUluY29ycmVjdEVycm9yIiwiVXNlck5vdExvZ2luZWRFcnJvciIsIlVzZXJIYXNOb1Blcm1pc3Npb24iLCJVc2VyQXJlYWR5Q29uZmlybWVkIiwiVXNlck5hbWVBbHJlYWR5RXhpc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./classes/Exceptions/UserExceptions.js\n");

/***/ }),

/***/ "(api)/./classes/ResponseSamples.js":
/*!************************************!*\
  !*** ./classes/ResponseSamples.js ***!
  \************************************/
/***/ ((module) => {

eval("/**\n * Samples response from server\n */ \nmodule.exports = {\n    /**\n     * Sample for default response\n     * @param {string} message \n     * @param {number} statusCode \n     * @returns String, contains response status and status code\n     */ DefaultResponse (message, statusCode) {\n        return `{\"Status\":\"${message}\", \"statusCode\":\"${statusCode}\"}`;\n    },\n    ToUserUserData (userData, statusCode) {\n        let response = {\n            userData: userData,\n            statusCode: statusCode\n        };\n        return JSON.stringify(response);\n    },\n    Data (data, statusCode) {\n        let response = {\n            data: data,\n            statusCode: statusCode\n        };\n        return JSON.stringify(response);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jbGFzc2VzL1Jlc3BvbnNlU2FtcGxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFDQTs7Q0FFQyxHQUNEQTtBQUFBQSxNQUFNLENBQUNDLE9BQU8sR0FBRztJQUNiOzs7OztLQUtDLEdBQ0RDLGVBQWUsRUFBQ0MsT0FBTyxFQUFFQyxVQUFVLEVBQUU7UUFBRSxPQUFPLENBQUMsV0FBVyxFQUFFRCxPQUFPLENBQUMsaUJBQWlCLEVBQUVDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUFFO0lBRXhHQyxjQUFjLEVBQUNDLFFBQVEsRUFBRUYsVUFBVSxFQUFFO1FBQ2pDLElBQUlHLFFBQVEsR0FBRztZQUNYRCxRQUFRLEVBQUVBLFFBQVE7WUFDbEJGLFVBQVUsRUFBRUEsVUFBVTtTQUN6QjtRQUVELE9BQU9JLElBQUksQ0FBQ0MsU0FBUyxDQUFDRixRQUFRLENBQUMsQ0FBQztLQUNuQztJQUVERyxJQUFJLEVBQUNDLElBQUksRUFBRVAsVUFBVSxFQUFFO1FBQ25CLElBQUlHLFFBQVEsR0FBRztZQUNYSSxJQUFJLEVBQUVBLElBQUk7WUFDVlAsVUFBVSxFQUFFQSxVQUFVO1NBQ3pCO1FBRUQsT0FBT0ksSUFBSSxDQUFDQyxTQUFTLENBQUNGLFFBQVEsQ0FBQyxDQUFDO0tBQ25DO0NBRUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkdGFibGUvLi9jbGFzc2VzL1Jlc3BvbnNlU2FtcGxlcy5qcz9iNzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBTYW1wbGVzIHJlc3BvbnNlIGZyb20gc2VydmVyXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIC8qKlxuICAgICAqIFNhbXBsZSBmb3IgZGVmYXVsdCByZXNwb25zZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBzdGF0dXNDb2RlIFxuICAgICAqIEByZXR1cm5zIFN0cmluZywgY29udGFpbnMgcmVzcG9uc2Ugc3RhdHVzIGFuZCBzdGF0dXMgY29kZVxuICAgICAqL1xuICAgIERlZmF1bHRSZXNwb25zZShtZXNzYWdlLCBzdGF0dXNDb2RlKSB7IHJldHVybiBge1wiU3RhdHVzXCI6XCIke21lc3NhZ2V9XCIsIFwic3RhdHVzQ29kZVwiOlwiJHtzdGF0dXNDb2RlfVwifWA7IH0sXG5cbiAgICBUb1VzZXJVc2VyRGF0YSh1c2VyRGF0YSwgc3RhdHVzQ29kZSkge1xuICAgICAgICBsZXQgcmVzcG9uc2UgPSB7XG4gICAgICAgICAgICB1c2VyRGF0YTogdXNlckRhdGEsXG4gICAgICAgICAgICBzdGF0dXNDb2RlOiBzdGF0dXNDb2RlXG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlKTtcbiAgICB9LFxuXG4gICAgRGF0YShkYXRhLCBzdGF0dXNDb2RlKSB7XG4gICAgICAgIGxldCByZXNwb25zZSA9IHtcbiAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICBzdGF0dXNDb2RlOiBzdGF0dXNDb2RlXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UpO1xuICAgIH0sXG5cbn0iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkRlZmF1bHRSZXNwb25zZSIsIm1lc3NhZ2UiLCJzdGF0dXNDb2RlIiwiVG9Vc2VyVXNlckRhdGEiLCJ1c2VyRGF0YSIsInJlc3BvbnNlIiwiSlNPTiIsInN0cmluZ2lmeSIsIkRhdGEiLCJkYXRhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./classes/ResponseSamples.js\n");

/***/ }),

/***/ "(api)/./classes/User.js":
/*!*************************!*\
  !*** ./classes/User.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { NotAllParametersWereRecievedError  } = __webpack_require__(/*! ./Exceptions/CommonExceptions */ \"(api)/./classes/Exceptions/CommonExceptions.js\");\nconst { UserLoginDataIncorrectError , UserNotFoundError , UserNotLoginedError , UserHasNoDevicesError , UserNameAlreadyExist  } = __webpack_require__(/*! ./Exceptions/UserExceptions */ \"(api)/./classes/Exceptions/UserExceptions.js\");\nconst AccountTypes = __webpack_require__(/*! ../pages/static/AccountTypes.json */ \"(api)/./pages/static/AccountTypes.json\");\nconst SpecificPermissions = __webpack_require__(/*! ../pages/static/SpecificPermissions.json */ \"(api)/./pages/static/SpecificPermissions.json\");\nconst Actions = __webpack_require__(/*! ../pages/static/Actions.json */ \"(api)/./pages/static/Actions.json\");\nconst DBWork = __webpack_require__(/*! ./databaseWork */ \"(api)/./classes/databaseWork.js\");\n// Get hash from string\nconst cyrb53 = function(str, seed = 0) {\n    let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n    for(let i = 0, ch; i < str.length; i++){\n        ch = str.charCodeAt(i);\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n    h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n    return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n};\nclass User {\n    /**\n     * Actions with user. Contains infromations of user, function for work with user.\n     * @param {DBWork} dbWork\n     */ constructor(dbWork){\n        if (dbWork === undefined || dbWork === null) throw new NotAllParametersWereRecievedError(\"You must specify all parameters\");\n        this.dbWork = dbWork;\n        this.isUserLogined = false;\n        this.userData = {};\n    }\n    /**\n     * Formatting info about user\n     */ FormatUserData() {\n        if (!this.isUserLogined) throw new UserNotLoginedError(\"User not logined\");\n        let CloneObject = (fromArray, toArray)=>{\n            for(let key in fromArray)toArray[key] = fromArray[key];\n        };\n        let userData = {};\n        CloneObject(this.userData, userData);\n        delete userData.password;\n        delete userData.password;\n        delete userData.sessions;\n        this.userData = userData;\n    }\n}\nclass UserWithToken extends User {\n    /**\n     * Actions with user. Login with session token.\n     * @param {String} userId \n     * @param {String} sessionToken \n     * @param {DBWork} dbWork \n     */ constructor(userId, sessionToken, dbWork){\n        if (userId === undefined || sessionToken === undefined || dbWork === undefined) throw new NotAllParametersWereRecievedError(\"You must specify all parameters\");\n        if (userId === null || sessionToken === null || dbWork === null) throw new NotAllParametersWereRecievedError(\"You must specify all parameters\");\n        super(dbWork);\n        this.userData = {\n            userId: userId,\n            sessionToken: sessionToken\n        };\n    }\n    /**\n     * Login user. \n     * Checks correct of login data.\n     */ async Login() {\n        let isTokenValid = false;\n        let dbWork = this.dbWork;\n        try {\n            let userData = await dbWork.GetUserData({\n                userId: this.userData.userId\n            });\n            userData.sessions.forEach((validSessionToken)=>{\n                if (validSessionToken == this.userData.sessionToken) isTokenValid = true;\n            }); // Check is session token is valid \n            if (!isTokenValid) throw new UserLoginDataIncorrectError(\"User login failed, data incorrected\");\n            this.userData = userData;\n            this.isUserLogined = true;\n            this.FormatUserData();\n        } catch (e) {\n            switch(e.name){\n                case new UserNotFoundError().name:\n                    throw new UserLoginDataIncorrectError(\"User not found\");\n                case new UserLoginDataIncorrectError().name:\n                    throw new UserLoginDataIncorrectError(\"User login failed, data incorrected\");\n                default:\n                    throw \"User login failed, uncaught error\";\n            }\n        }\n    }\n    /**\n     * Check is user has permission to make some action\n     * @param {string} action\n     */ CheckPermission(action) {\n        switch(action){\n            // Group headman perrmissions\n            case Actions.CONFIRM_ACCOUNT:\n            case Actions.GET_UNCONFIRMED_ACCOUNTS:\n            case Actions.UPDATE_TIMETABLE:\n                if (this.userData.accountType === AccountTypes.HEADMAN_GROUP && this.userData.isConfirmed) return true;\n                else return false;\n            case Actions.GET_TIMETABLE:\n                if (this.userData.isConfirmed) return true;\n                else return false;\n            default:\n                return false;\n        }\n    }\n    /**\n     * @return List of specific user permissions\n     */ GetSpecificPermissions() {\n        let permissions = [];\n        let accountType = this.userData.accountType;\n        let isConfirmed = this.userData.isConfirmed;\n        switch(accountType){\n            case AccountTypes.HEADMAN_GROUP:\n                if (isConfirmed) {\n                    permissions.push(SpecificPermissions.UPDATE_TIME_TABLE);\n                    permissions.push(SpecificPermissions.CONFIRM_ACCOUNT);\n                }\n                break;\n        }\n        return permissions;\n    }\n}\nclass UserWithPassword extends User {\n    /**\n     * Action with user. Login with user name and password\n     * @param {String} userName \n     * @param {String} password \n     * @param {DBWork} dbWork \n     */ constructor(userName, password, dbWork){\n        if (userName === undefined || password === undefined || dbWork === undefined) throw new NotAllParametersWereRecievedError(\"You must specify all parameters\");\n        if (userName === null || password === null || dbWork === null) throw new NotAllParametersWereRecievedError(\"You must specify all parameters\");\n        super(dbWork);\n        this.userData = {\n            userName: userName,\n            password: password\n        };\n    }\n    /**\n         * Loggining user.\n         * Throw UserLoginDataIncorrectError if login failed, beause entered data incorrect.\n         * Throw TypeError if login incorrect for other reasons.\n         */ async Login() {\n        let dbWork = this.dbWork;\n        try {\n            let userData = await dbWork.GetUserData({\n                userName: this.userData.userName\n            });\n            if (userData.userName !== this.userData.userName || userData.password !== this.userData.password) throw new UserLoginDataIncorrectError(\"User login failed, data incorrected\");\n            this.userData = userData;\n            this.isUserLogined = true;\n            this.FormatUserData();\n        } catch (e) {\n            switch(e.name){\n                case new UserNotFoundError().name:\n                    throw new UserLoginDataIncorrectError(\"User not found\");\n                case new UserLoginDataIncorrectError().name:\n                    throw new UserLoginDataIncorrectError(\"User login failed, data incorrected\");\n                default:\n                    throw \"User login failed, uncaught error\";\n            }\n        }\n    }\n    /**\n     * Validate data for registration\n     * @param {string} accountType\n     * @param {object} data \n     */ ValidateRegistryData(accountType, data, realInfo) {\n        switch(accountType){\n            // If we registry student/group headman\n            case AccountTypes.STUDENT:\n            case AccountTypes.HEADMAN_GROUP:\n                if (data.id === undefined || data.directionId === undefined || data.group === undefined || data.faculty === undefined || data.course === undefined || data.studentIdNumber === undefined) throw new NotAllParametersWereRecievedError(\"Not all registry parameters were recieved\");\n                break;\n        }\n        if (realInfo === undefined || realInfo.firstName === undefined || realInfo.secondName === undefined) throw new NotAllParametersWereRecievedError(\"Not all registry parameters were recieved\");\n    }\n    /**\n     * Check is username is free\n     */ async CheckUserName() {\n        let userName = this.userData.userName;\n        const database = this.dbWork;\n        let result;\n        try {\n            result = await database.GetUserData({\n                userName: userName\n            });\n        } catch  {\n            result = undefined;\n        }\n        if (result != undefined || result != null) throw new UserNameAlreadyExist(\"User name already exist\");\n    }\n    /**\n     * Registry new user\n     * @param {any} accountType\n     * @param {string} academyInfo \n     */ async Registry(accountType, academyInfo, eMail, realInfo) {\n        // Validate recieved data\n        this.ValidateRegistryData(accountType, academyInfo, realInfo);\n        await this.CheckUserName();\n        let date_ob = new Date();\n        // Get date s\n        let date = (\"0\" + date_ob.getDate()).slice(-2);\n        let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n        let year = date_ob.getFullYear();\n        let hours = date_ob.getHours();\n        let minutes = date_ob.getMinutes();\n        let seconds = date_ob.getSeconds();\n        // Generate account id\n        let stringToHash = date + month + year + hours + minutes + seconds + this.userData.userName;\n        let accountId = cyrb53(stringToHash);\n        this.userData.accountType = accountType;\n        this.userData.userId = String(accountId);\n        this.userData.isConfirmed = false;\n        this.userData.sessions = [];\n        this.userData.eMail = eMail;\n        this.userData.realInfo = realInfo;\n        this.userData.academy = {\n            id: academyInfo.id,\n            directionId: academyInfo.directionId,\n            group: academyInfo.group,\n            faculty: academyInfo.faculty,\n            course: academyInfo.course,\n            studentIdNumber: academyInfo.studentIdNumber\n        };\n        await this.dbWork.AddNewUser(this.userData);\n    }\n    /**\n     * Creating new session and generate session token\n     * @returns sessionToken\n     */ async CreateNewSession() {\n        if (!this.isUserLogined) throw new UserNotLoginedError(\"User not logined\"); // Check is user logined\n        // Variables\n        let dbWork = this.dbWork;\n        let date_ob = new Date();\n        // Get date s\n        let date = (\"0\" + date_ob.getDate()).slice(-2);\n        let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n        let year = date_ob.getFullYear();\n        let hours = date_ob.getHours();\n        let minutes = date_ob.getMinutes();\n        let seconds = date_ob.getSeconds();\n        // Generate session token\n        let stringToHash = date + month + year + hours + minutes + seconds + this.userData.userName;\n        let sessionToken = cyrb53(stringToHash);\n        // Save session token\n        await dbWork.AddNewUserSession(this.userData.userId, sessionToken);\n        this.userData.sessionToken = sessionToken;\n    }\n}\nmodule.exports = {\n    UserWithPassword,\n    UserWithToken\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./classes/User.js\n");

/***/ }),

/***/ "(api)/./classes/databaseWork.js":
/*!*********************************!*\
  !*** ./classes/databaseWork.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { UserNotFoundError  } = __webpack_require__(/*! ./Exceptions/UserExceptions */ \"(api)/./classes/Exceptions/UserExceptions.js\");\nconst { NotAllParametersWereRecievedError  } = __webpack_require__(/*! ./Exceptions/CommonExceptions */ \"(api)/./classes/Exceptions/CommonExceptions.js\");\nconst { DataNotFoundException  } = __webpack_require__(/*! ./Exceptions/DatabaseExceptions */ \"(api)/./classes/Exceptions/DatabaseExceptions.js\");\nconst MongoClient = (__webpack_require__(/*! mongodb */ \"mongodb\").MongoClient);\nconst { FarmNotFoundException  } = __webpack_require__(/*! ./Exceptions/FarmExceptions */ \"(api)/./classes/Exceptions/FarmExceptions.js\");\n// Database parameters\nconst dbName = \"StudTable\";\nconst usersCollection = \"Users\";\nconst timeTablePermanentCollection = \"TimeTablesPermanent\";\nconst academiesCollection = \"Academies\";\nconst specificDaysChangesCollect = \"SpecificDaysChanges\";\n/**\n * Access to db information.\n */ class DBWork {\n    constructor(url){\n        this.mongoClient = new MongoClient(url);\n    }\n    /**\n     * Searching user in DB.\n     * @param {any} searchParameters \n     * @returns User data if user exist.\n     */ async GetUserData(searchParameters) {\n        let userExist = false;\n        let userData;\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(usersCollection);\n        const results = await collection.find(searchParameters).toArray();\n        if (results.length != 0) {\n            userExist = true;\n            userData = results[0];\n        }\n        if (userExist) return userData; // If user exist, return information of user.\n        throw new UserNotFoundError(\"User not founded in DB\"); // If use not exist, throw error.\n    }\n    /**\n     * Adding user session token to data base\n     * @param {String} userId \n     * @param {String} sessionToken \n     */ async AddNewUserSession(userId, sessionToken) {\n        if (userId == undefined || sessionToken == undefined) throw new NotAllParametersWereRecievedError(\"Not all parameters were recieved\"); // Check,  is all parameters were recieved\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(usersCollection);\n        await collection.updateOne({\n            userId: userId\n        }, {\n            $push: {\n                sessions: sessionToken\n            }\n        });\n    }\n    /**\n     * Adding new user to database\n     * @param {any} userData \n     */ async AddNewUser(userData) {\n        if (userData === undefined) throw new NotAllParametersWereRecievedError(\"Not all parameters were recieved\"); // Check,  is all parameters were recieved\n        const datataBase = this.mongoClient.db(dbName);\n        const userCollection = datataBase.collection(usersCollection);\n        await userCollection.insertOne(userData);\n    }\n    /**\n     * Get uncofirmed account for concrete course\n     * @param {any} academyId \n     * @param {any} directionId \n     * @param {any} course \n     * @param {any} group \n     */ async GetUnconfirmedAccounts(academyId, directionId, course, group, accountType) {\n        if (academyId === undefined || directionId === undefined || course === undefined || group === undefined || accountType === undefined) throw new NotAllParametersWereRecievedError(\"Not all parameters were recieved\"); // Check,  is all parameters were recieved\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(usersCollection);\n        let result = await collection.find({\n            accountType: accountType,\n            isConfirmed: false,\n            \"academy.id\": academyId,\n            \"academy.directionId\": directionId,\n            \"academy.group\": group,\n            \"academy.course\": course\n        });\n        return result.toArray();\n    }\n    /**\n     * Getting time table\n     * @param {string} academyId \n     * @param {string} direction \n     * @param {string} group \n     * @param {string} course\n     * @param {string} date Set this parameter, if you want get timeTable of specific day\n     * @returns \n     */ async GetTimeTable(academyId, direction, group, course, date = undefined) {\n        if (academyId === undefined || direction == undefined || group === undefined) throw new NotAllParametersWereRecievedError(\"Not all parameters were recieved\");\n        const datataBase = this.mongoClient.db(dbName);\n        let collection;\n        let result = {};\n        switch(date){\n            case undefined:\n                // If date not setted -> user want to get permanent timeTable\n                collection = datataBase.collection(timeTablePermanentCollection);\n                result = await collection.findOne({\n                    academyId: academyId,\n                    direction: direction,\n                    group: group,\n                    course: course\n                });\n                break;\n            default:\n                // If date setted -> user want to get timeTable for specific day\n                collection = datataBase.collection(specificDaysChangesCollect);\n                result = await collection.findOne({\n                    academyId: academyId,\n                    direction: direction,\n                    group: group,\n                    date: date\n                });\n                break;\n        }\n        return result;\n    }\n    /**\n     * Getting info about university\n     * @param {string} academyId \n     */ async GetUniversityInfo(academyId) {\n        if (academyId === undefined) throw new NotAllParametersWereRecievedError(\"Not all parameters were recieved\");\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(academiesCollection);\n        let result = await collection.findOne({\n            id: academyId\n        });\n        return result;\n    }\n    /**\n     * Confirm account\n     * @param {String} userId\n     */ async ConfirmAccount(userId) {\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(usersCollection);\n        collection.updateOne({\n            userId: userId\n        }, {\n            $set: {\n                isConfirmed: true\n            }\n        });\n    }\n    /**\n     * Update timeTable for ALL week\n     * @param {String} academyId \n     * @param {String} direction \n     * @param {String} group \n     * @param {String} day \n     * @param {any} newTimeTable \n     */ async UpdateTimeTable(academyId, direction, group, course, newTimeTable) {\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(timeTablePermanentCollection);\n        collection.updateOne({\n            academyId: academyId,\n            direction: direction,\n            group: group,\n            course: course\n        }, {\n            $set: {\n                table: newTimeTable\n            }\n        });\n    }\n    /**\n     * Get raw academies info\n     */ async GetAcademies() {\n        const datataBase = this.mongoClient.db(dbName);\n        const collection = datataBase.collection(academiesCollection);\n        let result = collection.find({}).toArray();\n        return result;\n    }\n    isConnected() {\n        return !!this.mongoClient && !!this.mongoClient.topology && this.mongoClient.topology.isConnected();\n    }\n    /**\n     * Open connection to database\n     */ async Connect() {\n        if (!this.isConnected()) await this.mongoClient.connect();\n    }\n    /**\n     * Close connection ro database\n     */ async CloseConnection() {\n        await this.mongoClient.close();\n    }\n}\nconst StudTableDatabase = new DBWork(\"mongodb://127.0.0.1:27017/\");\nmodule.exports = {\n    StudTableDatabase: StudTableDatabase,\n    DBWork\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./classes/databaseWork.js\n");

/***/ }),

/***/ "(api)/./pages/api/checklogin.js":
/*!*********************************!*\
  !*** ./pages/api/checklogin.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookies-next */ \"cookies-next\");\n/* harmony import */ var cookies_next__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cookies_next__WEBPACK_IMPORTED_MODULE_0__);\nconst { UserLoginDataIncorrectError , UserNotFoundError  } = __webpack_require__(/*! ../../classes/Exceptions/UserExceptions */ \"(api)/./classes/Exceptions/UserExceptions.js\");\nconst ResponseSamples = __webpack_require__(/*! ../../classes/ResponseSamples */ \"(api)/./classes/ResponseSamples.js\");\nconst StatusCodes = __webpack_require__(/*! ../static/StatusCodes.json */ \"(api)/./pages/static/StatusCodes.json\");\nconst { DBWork , StudTableDatabase  } = __webpack_require__(/*! ../../classes/databaseWork */ \"(api)/./classes/databaseWork.js\");\nconst { UserWithToken  } = __webpack_require__(/*! ../../classes/User */ \"(api)/./classes/User.js\");\n\nvar Database = StudTableDatabase;\nasync function handler(req, res) {\n    let userId = (0,cookies_next__WEBPACK_IMPORTED_MODULE_0__.getCookie)(\"userId\", {\n        req,\n        res\n    });\n    let sessionToken = (0,cookies_next__WEBPACK_IMPORTED_MODULE_0__.getCookie)(\"sessionToken\", {\n        req,\n        res\n    });\n    if (userId === undefined || sessionToken === undefined) {\n        // If not all parameters were recieved send response\n        res.send(ResponseSamples.DefaultResponse(\"Login data not recieved\", StatusCodes.USER_LOGIN_ERROR));\n        return;\n    }\n    // Check is user exist and login data correct\n    try {\n        await Database.Connect();\n        let user = new UserWithToken(userId, sessionToken, Database);\n        await user.Login();\n        res.send(ResponseSamples.DefaultResponse(\"Logined\", StatusCodes.OK));\n        return;\n    } // Catching errors\n    catch (e) {\n        switch(e.name){\n            case new UserNotFoundError().name:\n                res.send(ResponseSamples.DefaultResponse(\"Incorrect user login data\", StatusCodes.USER_LOGIN_ERROR));\n                return;\n            case new UserLoginDataIncorrectError().name:\n                res.send(ResponseSamples.DefaultResponse(\"Incorrect user login data\", StatusCodes.USER_LOGIN_ERROR));\n                return;\n            default:\n                res.send(ResponseSamples.DefaultResponse(\"Error check login data\", StatusCodes.ERROR_CHECK_USER_LOGIN_DATA));\n                return;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvY2hlY2tsb2dpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNLEVBQUVBLDJCQUEyQixHQUFFQyxpQkFBaUIsR0FBRSxHQUFHQyxtQkFBTyxDQUFDLDZGQUF5QyxDQUFDO0FBQzdHLE1BQU1DLGVBQWUsR0FBR0QsbUJBQU8sQ0FBQyx5RUFBK0IsQ0FBQztBQUNoRSxNQUFNRSxXQUFXLEdBQUdGLG1CQUFPLENBQUMseUVBQTRCLENBQUM7QUFDekQsTUFBTSxFQUFFRyxNQUFNLEdBQUVDLGlCQUFpQixHQUFFLEdBQUdKLG1CQUFPLENBQUMsbUVBQTRCLENBQUM7QUFDM0UsTUFBTSxFQUFFSyxhQUFhLEdBQUUsR0FBR0wsbUJBQU8sQ0FBQyxtREFBb0IsQ0FBQztBQUNkO0FBQ3pDLElBQUlPLFFBQVEsR0FBR0gsaUJBQWlCO0FBRWpCLGVBQWVJLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDNUMsSUFBSUMsTUFBTSxHQUFHTCx1REFBUyxDQUFDLFFBQVEsRUFBRTtRQUFDRyxHQUFHO1FBQUVDLEdBQUc7S0FBQyxDQUFDO0lBQzVDLElBQUlFLFlBQVksR0FBR04sdURBQVMsQ0FBQyxjQUFjLEVBQUU7UUFBQ0csR0FBRztRQUFFQyxHQUFHO0tBQUMsQ0FBQztJQUV4RCxJQUFJQyxNQUFNLEtBQUtFLFNBQVMsSUFDcEJELFlBQVksS0FBS0MsU0FBUyxFQUFFO1FBQzVCLG9EQUFvRDtRQUNwREgsR0FBRyxDQUFDSSxJQUFJLENBQUNiLGVBQWUsQ0FBQ2MsZUFBZSxDQUFDLHlCQUF5QixFQUFFYixXQUFXLENBQUNjLGdCQUFnQixDQUFDLENBQUMsQ0FBQztRQUNuRyxPQUFPO0tBQ1Y7SUFFRCw2Q0FBNkM7SUFDN0MsSUFBSTtRQUNBLE1BQU1ULFFBQVEsQ0FBQ1UsT0FBTyxFQUFFLENBQUM7UUFDekIsSUFBSUMsSUFBSSxHQUFHLElBQUliLGFBQWEsQ0FBQ00sTUFBTSxFQUFFQyxZQUFZLEVBQUVMLFFBQVEsQ0FBQztRQUU1RCxNQUFNVyxJQUFJLENBQUNDLEtBQUssRUFBRSxDQUFDO1FBRW5CVCxHQUFHLENBQUNJLElBQUksQ0FBQ2IsZUFBZSxDQUFDYyxlQUFlLENBQUMsU0FBUyxFQUFFYixXQUFXLENBQUNrQixFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3JFLE9BQU87S0FDVixDQUVELGtCQUFrQjtJQUNsQixPQUFPQyxDQUFDLEVBQUU7UUFDTixPQUFRQSxDQUFDLENBQUNDLElBQUk7WUFDVixLQUFLLElBQUl2QixpQkFBaUIsRUFBRSxDQUFDdUIsSUFBSTtnQkFDN0JaLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDYixlQUFlLENBQUNjLGVBQWUsQ0FBQywyQkFBMkIsRUFBRWIsV0FBVyxDQUFDYyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JHLE9BQU07WUFFVixLQUFLLElBQUlsQiwyQkFBMkIsRUFBRSxDQUFDd0IsSUFBSTtnQkFDdkNaLEdBQUcsQ0FBQ0ksSUFBSSxDQUFDYixlQUFlLENBQUNjLGVBQWUsQ0FBQywyQkFBMkIsRUFBRWIsV0FBVyxDQUFDYyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JHLE9BQU87WUFFWDtnQkFDSU4sR0FBRyxDQUFDSSxJQUFJLENBQUNiLGVBQWUsQ0FBQ2MsZUFBZSxDQUFDLHdCQUF3QixFQUFFYixXQUFXLENBQUNxQiwyQkFBMkIsQ0FBQyxDQUFDLENBQUM7Z0JBQzdHLE9BQU87U0FDZDtLQUNKO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdHVkdGFibGUvLi9wYWdlcy9hcGkvY2hlY2tsb2dpbi5qcz80YjI1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVXNlckxvZ2luRGF0YUluY29ycmVjdEVycm9yLCBVc2VyTm90Rm91bmRFcnJvciB9ID0gcmVxdWlyZShcIi4uLy4uL2NsYXNzZXMvRXhjZXB0aW9ucy9Vc2VyRXhjZXB0aW9uc1wiKTtcbmNvbnN0IFJlc3BvbnNlU2FtcGxlcyA9IHJlcXVpcmUoXCIuLi8uLi9jbGFzc2VzL1Jlc3BvbnNlU2FtcGxlc1wiKVxuY29uc3QgU3RhdHVzQ29kZXMgPSByZXF1aXJlKFwiLi4vc3RhdGljL1N0YXR1c0NvZGVzLmpzb25cIik7XG5jb25zdCB7IERCV29yaywgU3R1ZFRhYmxlRGF0YWJhc2UgfSA9IHJlcXVpcmUoJy4uLy4uL2NsYXNzZXMvZGF0YWJhc2VXb3JrJyk7XG5jb25zdCB7IFVzZXJXaXRoVG9rZW4gfSA9IHJlcXVpcmUoXCIuLi8uLi9jbGFzc2VzL1VzZXJcIik7XG5pbXBvcnQgeyBnZXRDb29raWUgfSBmcm9tICdjb29raWVzLW5leHQnO1xudmFyIERhdGFiYXNlID0gU3R1ZFRhYmxlRGF0YWJhc2U7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgICBsZXQgdXNlcklkID0gZ2V0Q29va2llKCd1c2VySWQnLCB7cmVxLCByZXN9KTtcbiAgICBsZXQgc2Vzc2lvblRva2VuID0gZ2V0Q29va2llKCdzZXNzaW9uVG9rZW4nLCB7cmVxLCByZXN9KTtcblxuICAgIGlmICh1c2VySWQgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBzZXNzaW9uVG9rZW4gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAvLyBJZiBub3QgYWxsIHBhcmFtZXRlcnMgd2VyZSByZWNpZXZlZCBzZW5kIHJlc3BvbnNlXG4gICAgICAgIHJlcy5zZW5kKFJlc3BvbnNlU2FtcGxlcy5EZWZhdWx0UmVzcG9uc2UoXCJMb2dpbiBkYXRhIG5vdCByZWNpZXZlZFwiLCBTdGF0dXNDb2Rlcy5VU0VSX0xPR0lOX0VSUk9SKSk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpcyB1c2VyIGV4aXN0IGFuZCBsb2dpbiBkYXRhIGNvcnJlY3RcbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBEYXRhYmFzZS5Db25uZWN0KCk7XG4gICAgICAgIGxldCB1c2VyID0gbmV3IFVzZXJXaXRoVG9rZW4odXNlcklkLCBzZXNzaW9uVG9rZW4sIERhdGFiYXNlKTtcblxuICAgICAgICBhd2FpdCB1c2VyLkxvZ2luKCk7XG5cbiAgICAgICAgcmVzLnNlbmQoUmVzcG9uc2VTYW1wbGVzLkRlZmF1bHRSZXNwb25zZShcIkxvZ2luZWRcIiwgU3RhdHVzQ29kZXMuT0spKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIENhdGNoaW5nIGVycm9yc1xuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHN3aXRjaCAoZS5uYW1lKSB7XG4gICAgICAgICAgICBjYXNlIG5ldyBVc2VyTm90Rm91bmRFcnJvcigpLm5hbWU6XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoUmVzcG9uc2VTYW1wbGVzLkRlZmF1bHRSZXNwb25zZShcIkluY29ycmVjdCB1c2VyIGxvZ2luIGRhdGFcIiwgU3RhdHVzQ29kZXMuVVNFUl9MT0dJTl9FUlJPUikpO1xuICAgICAgICAgICAgICAgIHJldHVyblxuXG4gICAgICAgICAgICBjYXNlIG5ldyBVc2VyTG9naW5EYXRhSW5jb3JyZWN0RXJyb3IoKS5uYW1lOlxuICAgICAgICAgICAgICAgIHJlcy5zZW5kKFJlc3BvbnNlU2FtcGxlcy5EZWZhdWx0UmVzcG9uc2UoXCJJbmNvcnJlY3QgdXNlciBsb2dpbiBkYXRhXCIsIFN0YXR1c0NvZGVzLlVTRVJfTE9HSU5fRVJST1IpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoUmVzcG9uc2VTYW1wbGVzLkRlZmF1bHRSZXNwb25zZShcIkVycm9yIGNoZWNrIGxvZ2luIGRhdGFcIiwgU3RhdHVzQ29kZXMuRVJST1JfQ0hFQ0tfVVNFUl9MT0dJTl9EQVRBKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxufSJdLCJuYW1lcyI6WyJVc2VyTG9naW5EYXRhSW5jb3JyZWN0RXJyb3IiLCJVc2VyTm90Rm91bmRFcnJvciIsInJlcXVpcmUiLCJSZXNwb25zZVNhbXBsZXMiLCJTdGF0dXNDb2RlcyIsIkRCV29yayIsIlN0dWRUYWJsZURhdGFiYXNlIiwiVXNlcldpdGhUb2tlbiIsImdldENvb2tpZSIsIkRhdGFiYXNlIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInVzZXJJZCIsInNlc3Npb25Ub2tlbiIsInVuZGVmaW5lZCIsInNlbmQiLCJEZWZhdWx0UmVzcG9uc2UiLCJVU0VSX0xPR0lOX0VSUk9SIiwiQ29ubmVjdCIsInVzZXIiLCJMb2dpbiIsIk9LIiwiZSIsIm5hbWUiLCJFUlJPUl9DSEVDS19VU0VSX0xPR0lOX0RBVEEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/checklogin.js\n");

/***/ }),

/***/ "(api)/./pages/static/AccountTypes.json":
/*!****************************************!*\
  !*** ./pages/static/AccountTypes.json ***!
  \****************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"STUDENT":"Student","HEADMAN_GROUP":"GroupHeadman"}');

/***/ }),

/***/ "(api)/./pages/static/Actions.json":
/*!***********************************!*\
  !*** ./pages/static/Actions.json ***!
  \***********************************/
/***/ ((module) => {

module.exports = JSON.parse('{"UPDATE_TIMETABLE":"updtt","GET_TIMETABLE":"gtt","GET_UNCONFIRMED_ACCOUNTS":"gua","CONFIRM_ACCOUNT":"ca","GET_ACADEMIES":"ga","GET_FACULTIES":"gf","GET_DIRECTIONS":"gd"}');

/***/ }),

/***/ "(api)/./pages/static/SpecificPermissions.json":
/*!***********************************************!*\
  !*** ./pages/static/SpecificPermissions.json ***!
  \***********************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"UPDATE_TIME_TABLE":"updtt","CONFIRM_ACCOUNT":"ca"}');

/***/ }),

/***/ "(api)/./pages/static/StatusCodes.json":
/*!***************************************!*\
  !*** ./pages/static/StatusCodes.json ***!
  \***************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"NOT_ALL_PARAMETERS_WERE_RECIEVED":"20","INCORRECT_REQUEST":"80","OPERATION_FAILED":"90","NOT_FOUNDED":"70","OK":"100","USER_LOGIN_ERROR":"110","ERROR_CHECK_USER_LOGIN_DATA":"120","DATE_CONFLICT":"130","QUALIFICATION_ERROR":"140","USERNAME_ALREADY_EXIST":"150"}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/checklogin.js"));
module.exports = __webpack_exports__;

})();